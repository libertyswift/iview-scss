$blue: #1890ff;
$purple: #722ed1;
$cyan: #13c2c2;
$green: #52c41a;
$magenta: #eb2f96;
$red: #f5222d;
$orange: #fa8c16;
$yellow: #fadb14;
$volcano: #fa541c;
$geekblue: #2f54eb;
$lime: #a0d911;
$gold: #faad14;
$main-colors: (
  blue:      $blue,
  purple:    $purple,
  cyan:      $cyan,
  green:     $green,
  magenta:   $magenta,
  red:       $red,
  orange:    $orange,
  yellow:    $yellow,
  volcano:   $volcano,
  geekblue:  $geekblue,
  lime:      $lime,
  gold:      $gold
);
@function tetrad($color) {
  $hue: hue($color);
  $saturation: saturation($color);
  $lightness: lightness($color);
  $tetrad: ( hsl($hue, $saturation, $lightness),
  hsl($hue + 90 % 360, $saturation, $lightness),
  hsl($hue + 180 % 360, $saturation, $lightness),
  hsl($hue + 270 % 360, $saturation, $lightness) );
  @return $tetrad;
}
@function multiply ($fore, $back) {
  $red: red($back) * red($fore) / 255;
  $green: green($back) * green($fore) / 255;
  $blue: blue($back) * blue($fore) / 255;
  @return rgb($red, $green, $blue);
}
@function makeColorPalette($color) {
  $light: #fff;
  $dark: multiply($color, $color);
  $tetrad: tetrad($color);
  $palette: (
    50: mix($light, $color, 88%),
    100: mix($light, $color, 70%),
    200: mix($light, $color, 50%),
    300: mix($light, $color, 30%),
    400: mix($light, $color, 15%),
    500: mix($light, $color, 0%),
    600: mix($dark, $color, 13%),
    700: mix($dark, $color, 30%),
    800: mix($dark, $color, 46%),
    900: mix($dark, $color, 75%),
    A100: lighten(saturate(mix($dark, $color, 15%), 80%), 45.6%),
    A200: lighten(saturate(mix($dark, $color, 15%), 80%), 35.6%),
    A400: lighten(saturate(mix($dark, $color, 15%), 100%), 25.6%),
    A700: lighten(saturate(mix($dark, $color, 15%), 100%), 20.5%)
  );
  @return $palette;
}
@each $status, $color-item in $main-colors {

  //&--#{$status} {
  //  background: $color;
  //}
  @each $shade, $color in makeColorPalette($color-item) {
    .#{$status}-#{$shade} {
      background-color: $color;
      animation-name: #{$status}-#{$shade};
      &:after {
        content: "#{$color}";
      }
    }
    @keyframes #{$status}-#{$shade} {
      0% {
        background: $color-item;
      }
      100% {
        background: $color;
      }
    }
  }
}
.palette-block {
  display: grid;
  writing-mode: horizontal-tb;
  grid-template-rows: repeat(14, 1fr);
  width: 100%;
  overflow: hidden;
  border-radius: 8px;
  box-shadow: 0 5px 8px 0 rgba(0, 0, 0, 0.05);
  margin-bottom: 30px;
  div {
    display: inline-block;
    border: none;
    box-sizing: border-box;
    height: 50px;
    padding: 15px;
    overflow: hidden;
    animation-duration: 1s;
    animation-delay: .5s;
    animation-fill-mode: forwards;
    font-size: 14px;
    @for $i from 1 to 15 {
      &:nth-child(#{$i}) {
        animation-delay: $i * 0.05s;
      }
    }
    &:before, &:after {
      opacity: 0;
      animation: fadeIn 1s .5s ease forwards;
    }
    &:before {
      content: attr(class);
    }
    &:after {
      float: right;
    }
  }
}
@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
